(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{UQSp:function(t,e,a){"use strict";e.a={name:"VueRemarkRoot",render:function(t){return t("div",null,this.$slots.default)}}},xfhe:function(t,e,a){"use strict";a.r(e);var s=a("KHd+"),o=a("UQSp"),n=a("Kw5r");function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}n.default.config.optionMergeStrategies;var p={VueRemarkRoot:o.a},l=function(t){var e=t.options.components=t.options.components||{},a=t.options.computed=t.options.computed||{};Object.keys(p).forEach((function(t){"object"===r(p[t])&&"function"==typeof p[t].render||"function"==typeof p[t]&&"function"==typeof p[t].options.render?e[t]=p[t]:a[t]=function(){return p[t]}}))},i=n.default.config.optionMergeStrategies,c="__vueRemarkFrontMatter",u={excerpt:null,title:"Show parameters select all text | Bold Reports",path:"/report-parameters/show-select-all-text-instead-of-showing-all-values-from-parameter",description:"This document provides the details for showing the selected all text instead of showing all values from a parameter",date:"2022-05-24T00:00:00.000Z"};var v=function(t){t.options[c]&&(t.options[c]=u),n.default.util.defineReactive(t.options,c,u),t.options.computed=i.computed({$frontmatter:function(){return t.options[c]}},t.options.computed)},f=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("VueRemarkRoot",[a("h2",{attrs:{id:"is-it-possible-to-showing-the-selected-all-text-instead-of-showing-all-values-from-a-parameter"}},[a("a",{attrs:{href:"#is-it-possible-to-showing-the-selected-all-text-instead-of-showing-all-values-from-a-parameter","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Is it possible to showing the selected all text instead of showing all values from a parameter")]),a("p",[t._v("Yes, you can able to show the "),a("strong",[t._v("Selected All")]),t._v(" text instead of showing all values from parameter when we choose the select all option in Parameter using expression. You can find the below expression for achieving this.")]),a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",{pre:!0,attrs:{class:"language-csharp"}},[t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("iif")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Parameters"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ParameterName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Fields"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("FieldName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<DatasetName>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Selected All"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Parameters"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ParameterName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])])])}),[],!1,null,null,null);"function"==typeof l&&l(f),"function"==typeof v&&v(f);e.default=f.exports}}]);