{"hash":"598cb2497ad891189196726f5d918bc5b3b3ca75","data":{"docs":{"title":"How to bind business object data collection in a report?","date":"May 11, 2022","content":"\r\n## How to bind business object data collection in a report?\r\n\r\nThe section explains how to bind business object data collection to a report through the client and server side for RDLC reports.\r\n\r\n### Bind data source at client side\r\n\r\n1. Set the RDLC report path to the `reportPath` property.\r\n2. Assign the `processingMode` property to Local.\r\n3. Bind the JSON array collection to the dataSources property as shown in the following code.\r\n\r\n```javascript\r\n<script type=\"text/javascript\">\r\n        $(function () {\r\n            $(\"#viewer\").boldReportViewer({\r\n                reportServiceUrl: \"/api/ReportViewer\",\r\n                processingMode: ej.ReportViewer.ProcessingMode.Local,\r\n                reportPath: '~/Resources/docs/product-list.rdlc',\r\n                dataSources: [{\r\n                    value: [\r\n                    {\r\n                        ProductName: \"Baked Chicken and Cheese\", OrderId: \"323B60\", Price: 55, Category: \"Non-Veg\", Ingredients: \"Grilled chicken, Corn and Olives.\", ProductImage: \"\"\r\n                    },\r\n                    {\r\n                        ProductName: \"Chicken Delite\", OrderId: \"323B61\", Price: 100, Category: \"Non-Veg\", Ingredients: \"Cheese, Chicken chunks, Onions & Pineapple chunks.\", ProductImage: \"\"\r\n                    },\r\n                    {\r\n                        ProductName: \"Chicken Tikka\", OrderId: \"323B62\", Price: 64, Category: \"Non-Veg\", Ingredients: \"Onions, Grilled chicken, Chicken salami & Tomatoes.\", ProductImage: \"\"\r\n                    }],\r\n                    name: \"list\"\r\n                }]\r\n            });\r\n        });\r\n</script>\r\n\r\n```\r\n\r\n### Bind data source at server side (Web API Controller)\r\n\r\n* You need to create a class and methods that return business object data collection, as shown in the following example.\r\n\r\n```csharp\r\npublic class ProductList\r\n{\r\n    public string ProductName { get; set; }\r\n    public string OrderId { get; set; }\r\n    public double Price { get; set; }\r\n    public string Category { get; set; }\r\n    public string Ingredients { get; set; }\r\n    public string ProductImage { get; set; }\r\n\r\n    public static IList GetData()\r\n    {\r\n        List<ProductList> datas = new List<ProductList>();\r\n        ProductList data = null;\r\n        data = new ProductList()\r\n        {\r\n            ProductName = \"Baked Chicken and Cheese\",\r\n            OrderId = \"323B60\",\r\n            Price = 55,\r\n            Category = \"Non-Veg\",\r\n            Ingredients = \"grilled chicken, corn and olives.\",\r\n            ProductImage = \"\"\r\n        };\r\n        datas.Add(data);\r\n        data = new ProductList()\r\n        {\r\n            ProductName = \"Chicken Delite\",\r\n            OrderId = \"323B61\",\r\n            Price = 100,\r\n            Category = \"Non-Veg\",\r\n            Ingredients = \"cheese, chicken chunks, onions & pineapple chunks.\",\r\n            ProductImage = \"\"\r\n        };\r\n        datas.Add(data);\r\n        data = new ProductList()\r\n        {\r\n            ProductName = \"Chicken Tikka\",\r\n            OrderId = \"323B62\",\r\n            Price = 64,\r\n            Category = \"Non-Veg\",\r\n            Ingredients = \"onions, grilled chicken, chicken salami & tomatoes.\",\r\n            ProductImage = \"\"\r\n        };\r\n        datas.Add(data);\r\n\r\n        return datas;\r\n    }\r\n}\r\n\r\n```\r\n\r\n* You need to bind the business object data values collection to the Report Viewer using the `DataSources` property in the following code snippet.\r\n\r\n```csharp\r\npublic void OnInitReportOptions(ReportViewerOptions reportOption)\r\n{\r\nreportOption.ReportModel.ProcessingMode = ProcessingMode.Local;\r\nreportOption.ReportModel.DataSources.Add(new BoldReports.Web.ReportDataSource { Name = \"list\", Value = ProductList.GetData() });\r\n}\r\n\r\n```\r\n\r\n> Here, the `Name` is case sensitive and it should be the same as in the data source name in the report definition. The `Value` accepts `IList`, `DataSet`, and `DataTable` inputs.","description":"The section explains how to bind business object data collection to a report through the client and server side for RDLC reports."}},"context":{}}